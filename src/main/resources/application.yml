server:
  port: 8081
  servlet:
    context-path: /api

spring:
  application:
    name: biletter-service

  main:
    allow-circular-references: true

  cache:
    type: simple

  datasource:
    url: jdbc:postgresql://localhost:5432/biletter_db
    username: ${DB_USERNAME:biletter_user}
    password: ${DB_PASSWORD:biletter_pass}
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 100
      minimum-idle: 20
#      idle-timeout: 600000
#      max-lifetime: 1800000
#      connection-timeout: 300000
#      leak-detection-threshold: 30000
#      pool-name: HikariPool-Biletter
#      connection-init-sql: "SET statement_timeout = '60s'"
#      validation-timeout: 3000
#      keepalive-time: 300000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    placeholder-replacement: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: biletter-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  webflux:
    client:
      base-url: http://localhost:8080

# App Configuration
app:
  url: ${APP_URL:http://localhost:8081/api}
  paymentGateway:
    url: ${PAYMENT_GATEWAY_URL:https://hub.hackload.kz/payment-provider/common/api/v1}
    teamSlug: ${PAYMENT_TEAM_SLUG:metaload-akbori}
    password: ${PAYMENT_PASSWORD:dqzw***9TiN}

# External Services Configuration
external:
  hackload:
    base-url: ${HACKLOAD_BASE_URL:http://localhost:8080}
    api-version: v1

# Kafka Topics
kafka:
  topics:
    booking-events: booking-events
    payment-events: payment-events
    seat-election-events: seat-selection-events

# Logging
logging:
  level:
    com.metaload.biletter: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
